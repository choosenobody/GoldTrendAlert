
# File: liquidity_monitor_workflow_v1_1_2.yml
name: Liquidity Monitor Bot v1.1.2

on:
  schedule:
    # 每周日 13:00 UTC == 周日 21:00 GMT+8
    - cron: "0 13 * * 0"
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas yfinance python-dateutil

      - name: Sanity check
        run: |
          python -V
          echo "---- head of script ----"
          head -n 20 liquidity_monitor_bot_v1_1_2.py
          python -m py_compile liquidity_monitor_bot_v1_1_2.py

      - name: Run bot (send)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          # 手工覆盖优先（可留空）
          FOMC_NOTE: ${{ secrets.FOMC_NOTE }}
          GOLD_CB_PURCHASE_T: ${{ secrets.GOLD_CB_PURCHASE_T }}
          BTC_ETF_FLOWS_USD: ${{ secrets.BTC_ETF_FLOWS_USD }}
          # 自动数据源路径/API（可留空）
          WGC_CSV_PATH: ${{ secrets.WGC_CSV_PATH }}
          BTC_ETF_FLOWS_CSV_PATH: ${{ secrets.BTC_ETF_FLOWS_CSV_PATH }}
          BTC_ETF_API_URL: ${{ secrets.BTC_ETF_API_URL }}
          MODE: send
        run: |
          python liquidity_monitor_bot_v1_1_2.py

      - name: Status (optional dry-run)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          MODE: status
        run: |
          python liquidity_monitor_bot_v1_1_2.py
