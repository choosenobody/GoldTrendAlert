
name: Liquidity Monitor Bot v1.4.0
on:
  schedule:
    - cron: "0 13 * * 0"   # Sun 13:00 UTC == Sun 21:00 GMT+8
  workflow_dispatch: {}
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas yfinance python-dateutil lxml html5lib

      - name: Sanity
        run: |
          python - << 'PY'
          import sys, os
          print(sys.version)
          print("repo files:", os.listdir("."))
          PY

      - name: Run bot (send)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

          # FRED for TIPS & DXY
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}

          # Optional overrides
          GOLD_CB_PURCHASE_T: ${{ secrets.GOLD_CB_PURCHASE_T }}
          BTC_ETF_FLOWS_USD: ${{ secrets.BTC_ETF_FLOWS_USD }}

          # Data sources (Variables)
          WGC_CSV_URL: ${{ vars.WGC_CSV_URL }}
          IMF_USE_IFS: ${{ vars.IMF_USE_IFS }}
          IMF_COUNTRIES: ${{ vars.IMF_COUNTRIES }}
          IMF_FREQ: ${{ vars.IMF_FREQ }}
          IMF_INDICATOR_CANDIDATES: ${{ vars.IMF_INDICATOR_CANDIDATES }}

          # ETF sources
          BTC_ETF_FLOWS_CSV_URL: ${{ vars.BTC_ETF_FLOWS_CSV_URL }}
          BTC_ETF_API_URL: ${{ vars.BTC_ETF_API_URL }}
          BTC_ETF_API_METHOD: ${{ vars.BTC_ETF_API_METHOD }}
          BTC_ETF_API_HEADERS: ${{ vars.BTC_ETF_API_HEADERS }}
          BTC_ETF_API_BODY: ${{ vars.BTC_ETF_API_BODY }}
          BTC_ETF_API_DATE_FIELD: ${{ vars.BTC_ETF_API_DATE_FIELD }}
          BTC_ETF_API_FLOW_FIELD: ${{ vars.BTC_ETF_API_FLOW_FIELD }}
          FARSIDE_ALLDATA_URL: ${{ vars.FARSIDE_ALLDATA_URL }}

          # Scoring params
          GOLD_FAIR_BASE: ${{ vars.GOLD_FAIR_BASE }}
          BETA_TIPS: ${{ vars.BETA_TIPS }}
          ALPHA_CB: ${{ vars.ALPHA_CB }}
          DXY_LOOKBACK_D: ${{ vars.DXY_LOOKBACK_D }}
          ETF_SHORT_D: ${{ vars.ETF_SHORT_D }}
          ETF_LONG_D: ${{ vars.ETF_LONG_D }}
          AUCTION_WINDOW_D: ${{ vars.AUCTION_WINDOW_D }}

          MODE: send
        run: |
          export GOLD_FAIR_BASE="${GOLD_FAIR_BASE:-AUTO}"
          python liquidity_monitor_bot_v1_4_1.py
